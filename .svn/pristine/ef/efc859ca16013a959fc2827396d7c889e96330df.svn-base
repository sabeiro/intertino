#!/usr/bin/env Rscript
##https://docs.google.com/spreadsheets/d/1EIpoV-qou7q33mX1EE3s4E1jrR73n7ayOYTX8gb7j7c/edit?pref=2&pli=1#gid=274965455
##https://docs.google.com/spreadsheets/d/1EIpoV-qou7q33mX1EE3s4E1jrR73n7ayOYTX8gb7j7c/edit?pli=1#gid=2023380516
setwd('/home/sabeiro/lav/media')
##setwd("..")
source('script/graphEnv.R')
library(RCurl)
library(digest)
library(base64enc)
library('jsonlite')
library('rjson')
library('RJSONIO')
library('httr')
library("tm")
library(dplyr)
library(plotly)


## Sys.setenv("HADOOP_CMD"="/usr/hdp/2.3.2.0-2950/hadoop/bin/yarn")
## Sys.setenv("HADOOP_STREAMING"="/usr/hdp/2.3.2.0-2950/hadoop-mapreduce/hadoop-streaming-2.7.1.2.3.2.0-2950.jar")
## Sys.setenv("HADOOP_HOME"="/usr/hdp/2.3.2.0-2950/hadoop")
## Sys.setenv("HADOOP_PREFIX"="/usr/hdp/2.3.2.0-2950/hadoop")


html <- getURLContent('http://services.bluekai.com/Services/WS/Campaign?bkuid=750191b6ae4af549a35fffae8dd27930500f6b5ec43569b72b741680f92ab26f&bksig=mYryT6VXQYSb3pTwzxfp6%2BE%2BpKrvr9t8r5VpKYeaVR4%3D')
campList <- RJSONIO::fromJSON(html)$campaigns

campD <- NULL
for(i in as.numeric(labels(campList)) ){
    campD <- rbind(campD,c(campList[[i]]$name,campList[[i]]$campaignId))
}
campD <- as.data.frame(campD)
colnames(campD) <- c("name","id")

##----------------------------campaign-------------------------------
## library('snow')
## clus <- makeCluster(4)
## clusterEvalQ(clus, {library(dplyr); library(magrittr)})
## clusterExport(clus, "mergePar")
## mergePar <- function(df1,df2,byx,byy){
##     merge(df1,df2,by.x=byx,by.y=byy,all.x=T)
## }
##myfunction <- function(otherDataFrame, fst, snd) {dplyr::filter(otherDataFrame, COLUMN1_odf==fst & COLUMN2_odf==snd)}
##do.call(bind_rows,parApply(clus,myDataFrame,1,function(r, fst, snd) { myfunction(r[fst],r[snd]), "[fst]", "[snd]") }

es <- read.csv("raw/storicoERP2016.csv",stringsAsFactor=F)
formL <- c("FloorAd","Half Page","INTERSTITIAL","Intro","Ipad Display","iPhone","Leaderboard","Masthead","Mobile Display","Minisito","Overlayer","Pre-Roll Video","PromoBox","Rectangle","Rectangle Exp-Video","Skin","Splash Page","SPLASH PAGE","Strip")
es <- es[es$Formato %in% formL,]

es$date <- as.Date(es$Data.Prenotazione,format="%Y-%m-%d")
##as.Date(es$Data.Caricamento.Contratto,format="%d/%m/%Y")
es <- es[es$date > as.Date("2016-01-01"),]
es <- es[order(es$date),]
es$Quantità.Ordine <- es$Quantità.Ordine
esOrder <- ddply(es,.(Numero.Contratto),summarise,price=sum(Valore.Netto),quant=sum(Quantità.Ordine),client=head(Cliente,1))
esClient <- ddply(es,.(Cliente),summarise,price=sum(Valore.Netto),quant=sum(Quantità.Ordine))
es$week <- format(es$date,format="%y-%m")
esWeek <- ddply(es,.(week),summarise,price=sum(Valore.Netto),quant=sum(Quantità.Ordine))

##fs <- read.csv("log/bkKeyOrder.csv",stringsAsFactor=F)
fs <- read.csv("raw/bkOrderJul.csv",stringsAsFactor=F)
fs <- rbind(fs,read.csv("raw/bkOrderAug.csv",stringsAsFactor=F))
fs <- rbind(fs,read.csv("raw/bkOrderSept.csv",stringsAsFactor=F))
fs <- rbind(fs,read.csv("raw/bkOrderOct.csv",stringsAsFactor=F))
fs <- rbind(fs,read.csv("raw/bkOrderNov.csv",stringsAsFactor=F))
fs <- rbind(fs,read.csv("raw/bkOrderDec.csv",stringsAsFactor=F))
if(TRUE){
    fs <- fs[grepl("=bk_",fs$MatchedKeyword),]
    fs$key <- fs$MatchedKeyword %>% gsub("^.*=bk_","",.)  %>% gsub("\\^.*$","",.) 
    fs$key2 <- NULL
    set <- grepl("§bk_",fs$key)
    fsT <- fs[set,]
    fsT$key <- gsub("^.*§bk_","",fs$key[set])
    print(paste("double count:",percent(nrow(fsT)/nrow(fs))))
    fs <- rbind(fs,fsT)
    fs$key[set] <- gsub("§bk_.*$","",fs$key[set])
}
fs$date <- as.Date(as.character(fs$Data),format="%Y%m%d",origin="1970-01-01")
orderNA <- ddply(fs,.(OrderExtId),summarise,imps=sum(imps))
print(paste("missing order:",orderNA[is.na(orderNA$OrderExtId),"imps"]/sum(orderNA[,"imps"])))
fs <- merge(fs,campD,by.x="key",by.y="id",all.x=T)
fs$name[grepl("103163",fs$key)] <- "F z beha"
fs$name[grepl("108047",fs$key)] <- "F z"
fs$source <- "first"
fs$source[grepl(" z",fs$name)] <- "zalando intent"
##fs$source[grepl("shopp",fs$name)] <- "e-shoppers"
fs$source[grepl(" z",fs$name) & grepl("s-d",fs$name)] <- "zalando s/d"
fs$source[grepl(" z",fs$name) & grepl("pub",fs$name)] <- "zalando s/d"
fs$source[grepl(" z",fs$name) & grepl("beha",fs$name)] <- "zalando behavioural"
fs$source[grepl(" 1st",fs$name) & grepl("s-d",fs$name)] <- "first s/d"
fs$source[grepl(" v",fs$name)] <- "vodafone"
fs$name <- fs$name %>% gsub("pub ","",.) %>% gsub("s-d ","",.) %>% gsub(" v","",.) %>% gsub(" z","",.) %>% gsub(" 1st","",.) %>% gsub(" beha","",.)
fs$format <- "Display"
fs$format[fs$Size=="SPOT"] <- "Video"
##fs$key <- substring(fs$key,first=1,last=7)
##table(fs$key)
##table(fs$date)
##-----------------------------time-ev--------------------------------
keyD <- ddply(fs,.(date,name,source),summarise,imps=sum(imps,na.rm=T))
melted <- keyD
##melted$name <- factor(melted$name,levels=melted$name[order(melted$name)])
melted <- melted[order(melted$source),]
melted$source <- factor(melted$source,levels=melted$source[order(melted$source)])
gLabel = c("category","impressions (k/day)",paste("category usage"),"cat")
p <- ggplot(melted,aes(x=date,y=imps/1000)) +
    ##geom_violin(position = "dodge") +
    geom_bar(aes(fill=source),stat="identity",position="stack") +
    theme(legend.position=c(.2,.3)) +
    ##scale_fill_manual(values=gCol1) +
    labs(x=gLabel[1],y=gLabel[2],title=gLabel[3],fill=gLabel[4],color=gLabel[4])
p
fName <- paste("fig/audienceUsage.png")
ggsave(file=fName, plot=p, width=gWidth, height=gHeight)
##(gg <- ggplotly(p,filename="intertino/target_usage.html"))

##-----------------------------split-------------------------------
fs$name[grepl("103163",fs$key)] <- "F z beha"
fs$name[grepl("108047",fs$key)] <- "F z"
keyF <- ddply(fs,.(OrderExtId,name,source,key,Size),summarise,imps=sum(imps))
print(paste("lost keyword:",sum(keyF[is.na(keyF$name),"imps"])))
##keyF <- keyF[!is.na(keyF$name),]

fs$week <- format(fs$date,format="%y-%m")
keyW <- ddply(fs,.(week,OrderExtId),summarise,imps=sum(imps))
keyW <- merge(keyW,esOrder,by.x="OrderExtId",by.y="Numero.Contratto",all.x=T)
keyW$perc <- unlist((keyW[,c("OrderExtId","imps")] %>% group_by(OrderExtId) %>% mutate_each(funs(./sum(.,na.rm=T))))[2])
keyW$price <- keyW$price*keyW$perc
keyW <- ddply(keyW,.(week),summarise,imps=sum(imps,na.rm=T),price=sum(price,na.rm=T))#,quant=sum(quant,na.rm=T))
keyW <- merge(keyW,esWeek,by.x="week",by.y="week")
keyW$target_perc <- keyW$price.x/keyW$price.y

set <- grepl("SPOT",keyF$size)
keyF$size[set] <- gsub(" ","",keyF$size[set])
keyF$format <- "DISPLAY"
keyF$format[set] <- "VIDEO"
keyF <- merge(keyF,esOrder[,c("Numero.Contratto","client")],by.x="OrderExtId",by.y="Numero.Contratto",all.x=T)
write.csv(keyF,"raw/impressionKeywordAdv.csv",row.names=F)
head(fs)

con <- pipe("xclip -selection clipboard -i", open="w")
##write.csv(keyW,con,row.names=F)
##write.csv(keyF,con,row.names=F)
##write.csv(fs,con,row.names=F)
##write.csv(ddply(fs,.(week,name,source),summarise,imps=sum(imps,na.rm=T)),con,row.names=F)##diretta mese
##write.csv(ddply(fs,.(week,source,format),summarise,imps=sum(imps,na.rm=T)),con,row.names=F)##riassunto
##write.csv(ddply(keyF,.(OrderExtId,client,Size,name,source),summarise,imps=sum(imps)),con,row.names=F)
close(con)

keyPrice <- ddply(keyF,.(OrderExtId),summarise,imps=sum(imps))
keyPrice <- merge(keyPrice,esOrder,by.x="OrderExtId",by.y="Numero.Contratto",all.x=T)

valN <- "client"
keyPrice <- ddply(keyPrice,valN,summarise,imps=sum(imps),price=sum(price),quant=sum(quant))
valN <- "Size"
valN <- "source"
keyPrice <- ddply(keyF,valN,summarise,imps=sum(imps))
keyPrice$perc <- keyPrice$imps/sum(keyPrice$imps)

melted <- keyPrice
varN <- "price"
varN <- "imps"
melted$var <- melted[,valN]
melted$val <- melted[,varN]
melted$valL <- paste(round(melted$val/1000000,1),"M")
if(!sum(melted$val)/nrow(melted)>1000000){
    melted$valL <- paste(round(melted$val/1000,1),"k")
}
gLabel = c("",varN,paste("client"),"client")
melted$percentage <- melted$val/sum(melted$val,na.rm=T)
melted$y <- cumsum(melted$percentage) - melted$percentage/2
stopwordsIt <- read.csv("out/train/stopwords_comp_it.csv",header=F,stringsAsFactor=F)$V1
melted$var <- tryTolower(melted$var)
melted$var <- gsub("[[:punct:]]","",melted$var)
melted$var <- removeWords(melted$var,stopwordsIt)
melted$var <- gsub("[ ]{2,}"," ",melted$var)
melted$var <- gsub(" $","",melted$var)
melted$var <- gsub("^ ","",melted$var)

strLen <- as.vector(regexpr("([a-z][ ].*){2}",melted$var))
strLen[strLen<=0] <- Inf
strLen[is.na(strLen)] <- Inf
strLen <- pmin(strLen,nchar(melted$var,keepNA=0))
melted$label <- substring(melted$var,first=1,last=strLen)
meltedQuant <- melted[melted$val>quantile(melted$val,0.2,na.rm=T),]
meltedQuant2 <- melted[melted$val<=quantile(melted$val,0.2,na.rm=T),]

pie <- ggplot(melted, aes(x="",y=percentage,fill=var,label=percent(percentage))) +
    geom_bar(width=1,stat="identity") +
    geom_text(data=meltedQuant,aes(x=0.6,y=y,label=percent(percentage)),size=5) +
    geom_text(data=meltedQuant,aes(x=0.9,y=y,label=valL), size=5) +
    geom_text(data=meltedQuant,aes(x=1.5,y=y,label=label), size=5) +
    geom_text(data=meltedQuant2,aes(x=1.7,y=y,label=label), size=5) +
    geom_text(aes(x=0,y =0,label=paste(round(sum(val,na.rm=T)/1000000,1),"M")), size=5) +
    theme_bw() +
    theme(
        panel.border = element_blank(),
        text = element_text(size = gFontSize),
        axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks=element_blank(),
        legend.position="none",
        plot.background=element_blank(),
        panel.background = element_blank()
    ) +
    ##scale_fill_manual(values=gCol1) +
    coord_polar("y",start=0) + 
    labs(x=gLabel[1],y=gLabel[2],title=gLabel[3],fill=gLabel[4])
pie



keySum <- ddply(keyF,.(name),summarise,imps=sum(imps))
keySum$type <- "interest"
set <- grepl(" v",keySum$name) |  grepl(" z",keySum$name) | grepl("st",keySum$name) 
keySum$type[set] <- "socio-demo"
keySum$type[grepl("shopp",keySum$name)] <- "intention-buy"
melted <- ddply(keySum,.(type),summarise,imps=sum(imps))
melted$name <- melted$type
melted$percentage <- melted$imps/sum(melted$imps)

set <- TRUE
melted <- ddply(keyF[set,],.(Size),summarise,imps=sum(imps))
melted$name <- melted$Size
melted$percentage <- melted$imps/sum(melted$imps)


gLabel = c("category","impressions",paste("category usage"),"category")
pie <- ggplot(melted, aes(x="",y=percentage,fill=name,label=percent(percentage))) +
    geom_bar(width = 1,stat="identity") +
    scale_fill_manual(values=gCol1) +
    geom_text(aes(x=1,y = percentage/4 + c(0, cumsum(percentage)[-length(percentage)]),
                  label = percent(percentage)), size=5) +
    geom_text(aes(x=1.3,y = percentage/2 + c(0, cumsum(percentage)[-length(percentage)]),
                  label = paste(round(imps/1000000,1),"M")), size=5) +
    geom_text(aes(x=1.6,y = 3*percentage/4 + c(0, cumsum(percentage)[-length(percentage)]),
                  label = substring(name,first=1,last=16)), size=5) +
    theme_bw() +
    theme(
        panel.border = element_blank(),
        text = element_text(size = gFontSize),
        axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks=element_blank(),
        legend.position="none",
        plot.background=element_blank(),
        panel.background = element_blank()
    ) +
    coord_polar("y",start=0) + 
    labs(x=gLabel[1],y=gLabel[2],title=gLabel[3],fill=gLabel[4])
pie




## g1 <- ggplotGrob(p)
## g1 <- gtable_add_cols(g1, unit(0,"mm")) # add a column for missing legend
## g2 <- ggplotGrob(pieC)
## g <- rbind(g1, g2, size="first") # stack the two plots
## g$widths <- unit.pmax(g1$widths, g2$widths) # use the largest widths
## # center the legend vertically
## g$layout[grepl("guide", g$layout$name),c("t","b")] <- c(1,nrow(g))
## grid.newpage()
## grid.draw(g)




####--------------------------test--------------------------------

fs <- read.csv('log/matchedKeywordBkSite.csv',header=F,stringsAsFactor=F)
colnames(fs) <- c("camp","key","date","imps")
keywords <- strsplit(fs[,2],split="bk_")
keyL <- NULL
keyFT <- NULL
i <- length(keywords)
for(i in 1:length(keywords) ){
    keyL <- rbind(keyL,c(paste(keywords[[i]][-1],collapse=",")))
}
keyV <- as.vector(unlist(keyL))
set <- grepl(",",keyV)
keyD1 <- unlist(lapply(strsplit(keyV[set],split=","),'[[',1))
keyD2 <- unlist(lapply(strsplit(keyV[set],split=","),'[[',2))
keyD <- data.frame(date=fs[set,"date"],key=keyD1,imps=fs[set,"imps"],camp=fs[set,"camp"])
keyD <- rbind(keyD,data.frame(date=fs[set,"date"],key=keyD2,imps=fs[set,"imps"],camp=fs[set,"camp"]))
keyF1 <- rbind(keyD,data.frame(date=fs[!set,"date"],key=keyV[!set],imps=fs[!set,"imps"],camp=fs[!set,"camp"]))
keyF1$key <- gsub("§","",keyF1$key)
keyF1 <- merge(keyF1,campD,by.x="key",by.y="id",all.x=T)
keyF1$date <- as.Date(strptime(as.character(keyF1$date),format="%Y%m%d"))
keyFT <- rbind(keyFT,keyF1)

campL <- unique(fs$camp)
fs1 <- read.csv('log/runningOnKey.csv')
head(fs1)
set <- FALSE | grepl("SCA ",fs1$AdDescription) | grepl("SWIFFER",fs1$AdDescription)
for(i in campL){set <- set | grepl(i,fs1$AdDescription)}
table(set)
fs1 <- fs1[set,]
fs1[grepl("SCA ",fs1$AdDescription),]
fs1$Data <- as.Date(fs1$Data)

fs2 <- ddply(fs,.(date, camp),summarise,imps=sum(imps))
fs2$date <- as.Date(strptime(as.character(fs2$date),format="%Y%m%d"))

gLabel = c("category","impressions (k/day)",paste("category usage"),"camp")
p <- ggplot(fs1,aes(x=Data,y=Imps/1000)) +
    geom_bar(aes(fill=AdDescription,group=AdDescription),stat="identity",position="dodge",alpha=.7) +
    geom_line(data=fs2,aes(x=date,y=imps/1000,color=camp,group=camp),size=2) +
    coord_cartesian(ylim = c(0, 100)) +
    ##theme(legend.position="bottom") + 
    labs(x=gLabel[1],y=gLabel[2],title=gLabel[3],fill="camp report",color="camp somma keyword")
p

fs1$camp <- fs1$AdDescription

gLabel = c("category","impressions (k/day)",paste("category usage"),"camp")
p <- ggplot(keyFT,aes(x=date,y=imps/1000)) +
    geom_bar(aes(fill=name,group=name),stat="identity",position="dodge") +
    theme(legend.position="bottom") +
    facet_grid(.~camp) + 
    labs(x=gLabel[1],y=gLabel[2],title=gLabel[3],fill=gLabel[4],color=gLabel[4])
p

write.csv(fs1,"log/keywordSumCheck_Report.csv")
write.csv(fs2,"log/keywordSumCheck_FullReport.csv")
write.csv(keyF,"log/keywordSumCheck_keyUsage.csv")







fs <- read.csv("raw/bluekaiContainerHitsQ1.tsv",sep="\t")
fs <- rbind(fs,read.csv("raw/bluekaiContainerHitsQ2.tsv",sep="\t"))
fs <- rbind(fs,read.csv("raw/bluekaiContainerHitsQ3.tsv",sep="\t"))
fs$PERIOD <- as.Date(fs$PERIOD)
head(fs)

hitSum <- ddply(fs,.(SITE),summarise,hit=sum(SITE_HITS))
sum(hitSum[grepl("swap",hitSum$SITE),"hit"])

melted <- fs
melted <- fs[grepl("swap",fs$SITE),]
melted <- fs[grepl("retar",fs$SITE),]
melted <- fs[!grepl("json",fs$SITE),]

ggplot(melted,aes(x=PERIOD,y=SITE_HITS,color=SITE,group=SITE)) +
    geom_line() +
    scale_x_date(labels = date_format("%Y-%m"))

melted$month <- format(melted$PERIOD,format="%m")
##melted <- melted[!melted$SITE_HITS > quantile(melted$SITE_HITS,c(0.01,0.99))[2],]
mSite <- ddply(melted,.(month),summarise,imps=sum(SITE_HITS))
mSite$name <- mSite$month

mSite <- ddply(melted,.(SITE),summarise,imps=sum(SITE_HITS))
mSite$name <- mSite$SITE

mSite <- mSite[mSite$imps>quantile(mSite$imps,0.70),]


mSite$percentage <- mSite$imps/sum(mSite$imps)
gLabel = c("",lVar,paste("provider share",lVar),"browser")
pie <- ggplot(mSite, aes(x="",y=percentage,fill=name,label=percent(percentage))) +
    geom_bar(width = 1,stat="identity") +
    scale_fill_manual(values=gCol1) +
    geom_text(aes(x=1,y = percentage/2 + c(0,cumsum(percentage)[-length(percentage)]),
                  label = percent(percentage)), size=5) +
    geom_text(aes(x=1.3,y = percentage/2 + c(0,cumsum(percentage)[-length(percentage)]),
                  label = paste(round(imps/1000000,1),"M")), size=5) +
    geom_text(aes(x=1.6,y = percentage/2 + c(0,cumsum(percentage)[-length(percentage)]),
                  label = name), size=5) +
    geom_text(aes(x=0,y =0,label=paste(round(sum(imps)/1000000),"M")), size=5) +
    theme_bw() +
    theme(
        panel.border = element_blank(),
        text = element_text(size = gFontSize),
        axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks=element_blank(),
        legend.position="none",
        plot.background=element_blank(),
        panel.background = element_blank()
    ) +
    coord_polar("y",start=0) + 
    labs(x=gLabel[1],y=gLabel[2],title=gLabel[3],fill=gLabel[4])
pie



(sum(mSite$imps)/1000000 + 90 + 90 + 90) / ((4768907503.2+384157591.2) /1000000*4/3)

448+311+44

122/97




cs <- read.csv("rep/anomalieVideo2.csv")
cs <- merge(cs,es,by.y="Numero.Contratto",by.x="OrderExtId",all.x=T)
head(cs)
write.csv(cs,"rep/anomalieVideo3.csv")



