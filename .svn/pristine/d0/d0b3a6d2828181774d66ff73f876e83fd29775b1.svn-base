#!/usr/bin/env Rscript
setwd('/home/sabeiro/lav/media/')
source('script/graphEnv.R')
library('corrplot') #package corrplot
library('svglite')
require(stats)
require(dplyr)
library(grid)
library(sqldf)
library('rjson')
library('jsonlite')
library('RJSONIO')
library(RCurl)


catLapi <- getURLContent("http://services.bluekai.com/Services/WS/Taxonomy?bkuid=750191b6ae4af549a35fffae8dd27930500f6b5ec43569b72b741680f92ab26f&bksig=Gl03XkcrZLRDoq6nycOK2vvFI%2FkoX5zyfgi8OTnUCTs%3D")
catL1 <- RJSONIO::fromJSON(catLapi)
catL1 <- catL1[['nodeList']]
catL <- do.call(rbind.data.frame,catL1)
fs <- read.csv("raw/audReach.csv",stringsAsFactor=F)
catG <- NULL
catGL <- list()
for(i in 1:nrow(fs)){
    catS <- fromJSON(fs$cat[i])
    for(j in catS){
        catG = rbind(catG,data.frame(id=j$AND[[1]]$cat,reach=j$AND[[1]]$reach,group=fs[i,"id"],gName=fs[i,"name"],gReach=fs[i,"reach"]))
    }
}
catG$name <- catL[match(catG$id,catL$nodeID),"nodeName"]
catG$parent <- catL[match(catG$id,catL$nodeID),"parentID"]
catG$parentName <- catL[match(catG$parent,catL$nodeID),"nodeName"]
catG$reach <- catG$reach/1000000
catG$gReach <- catG$gReach/1000000
catG <- catG[!is.na(catG$name),]
catG$gName <- catG$gName %>% gsub("Yahoo ","",.) %>% sub("i-t ","",.)
if(FALSE){##network
    groupG <- ddply(catG,.(gName,gReach,group),summarise,reach_sum=sum(reach),nodes=length(name))
    groupG <- groupG[groupG$nodes > 7,]##filter
    groupG <- groupG[!grepl("mm01",groupG$gName),]##filter
                                        #groupG <- groupG[!grepl("an seconde",groupG$gName),]##filter
    groupG <- groupG[!grepl("an femminile",groupG$gName),]##filter
    groupG <- groupG[!grepl("an video",groupG$gName),]##filter
    groupG <- groupG[!grepl("Fertilit",groupG$gName),]##filter
    groupG <- groupG[!grepl("Bellezza",groupG$gName),]##filter
    groupG <- groupG[!grepl("Genitori",groupG$gName),]##filter
    groupG <- groupG[!grepl("Sciure",groupG$gName),]##filter
                                        #groupG <- groupG[!grepl("Yahoo",groupG$gName),]##filter
    catG <- catG[catG$gName %in% groupG$gName,]
    parentG <- ddply(catG,.(parent,parentName,group),summarise,nodes=length(name))
    nodeF <- data.frame(name=groupG$gName,group=-1,ref=groupG$group,size=groupG$gReach)
    nodeF <- rbind(nodeF,data.frame(name=parentG$parentName,group=parentG$group,ref=parentG$parent,size=parentG$nodes))
    nodeF <- rbind(nodeF,data.frame(name=catG$name,group=catG$group,ref=catG$id,size=catG$reach))
    nodeF <- ddply(nodeF,.(ref),summarise,name=head(name,1),group=head(group,1),size=sum(size))
    nodeF$idx <- 1:nrow(nodeF)
    nodeL <- as.list(nodeF)
    nodeL <- list()
    for(i in 1:nrow(nodeF)){
        nodeL[[i]] = list(name=nodeF$name[i],group=nodeF$group[i],idx=nodeF$idx[i],size=nodeF$size[i])
    }
    nodeL <- list(nodes=nodeL)
    write(toJSON(nodeL),"intertino/data/networkTaxonomyNodes.json")
    linkF <- data.frame(id=catG$id,to=catG$parent,value=catG$reach,name=catG$name)
    linkF <- rbind(linkF,data.frame(id=parentG$parent,to=parentG$group,value=parentG$nodes,name=parentG$parentName))
    linkF$source <- nodeF[match(linkF$id,nodeF$ref),"idx"]
    linkF$target <- nodeF[match(linkF$to,nodeF$ref),"idx"]
    linkL <- list()
    for(i in 1:nrow(linkF)){
        linkL[[i]] = list(source=linkF$source[i]-1,target=linkF$target[i]-1,value=linkF$value[i],name=linkF$name[i])
    }
    linkL <- list(links=linkL)
    write(toJSON(linkL),"intertino/data/networkTaxonomyLinks.json")
}

fs <- read.csv("raw/audienceReachElab.csv")
fs <- fs[!is.na(fs$reach.ui),]
fs$reach <- fs$reach.ui/1000

fs <- read.csv("raw/audCompPubmatic1.csv")
fs$name <- fs$Audience.Name
fs$reach <- fs$Total.Uniques/1000
fs$imps <- fs$Impressions/1000

fs$group <- substring(fs$name,first=1,last=3)
fs$group <- tryTolower(fs$group)
fs <- fs[!grepl("g-o",fs$group),]
fs$name <- fs$name %>% gsub("s-d","",.) %>% gsub("i-t","",.) %>% gsub("i-b","",.) %>% gsub("pub","",.) %>% gsub("I-t","",.) %>% gsub("I-b","",.)
##melted <- fs[fs$group=="i-t",]
##melted <- melt(fs[grepl("SOCIODEMO",fs$Tier),-1],id="Segmento")
colN <- round(sqrt(nrow(melted)))
rowN <- round(nrow(melted)/colN)
melted <- melted[order(melted$group,melted$name),]
melted$x <- round(1:nrow(melted)/10) - 5
melted$y <- 1:nrow(melted) %% 10
melted$x <- melted$x + runif(nrow(melted),-.3,.3)
melted$y <- melted$y + runif(nrow(melted),-.3,.3)
gLabel = c("","",paste("Audience reach"),"margin")
p <- ggplot(melted,aes(x=x,y=y,color=name)) +
    geom_point(aes(size=reach),alpha=0.4) +
    geom_point(aes(size=imps),alpha=0.4) +
    geom_text(aes(label=name),hjust=1,size=4) +
    geom_text(aes(label=paste(round(reach),"k")),hjust=1,vjust=-0.5,size=6) +
    ##scale_size_area() +
    scale_size(range = c(0, 50)) +
    scale_color_manual(values=c(gCol1,gCol1,gCol1)) +
    xlim(min(melted$x),max(melted$x)*.9) +
    ylim(min(melted$y),max(melted$y)*.9) +
    ##ylim(-2,2) +
    theme(
        legend.position="none",
        ##axis.text.x = element_text(angle = 30,margin=margin(-10,0,0,0)),
        panel.background = element_blank(),
        axis.ticks = element_blank(), axis.text.x = element_blank(),
        axis.text.y = element_blank()
    ) +
    labs(x=gLabel[1],y=gLabel[2],title=gLabel[3],color=gLabel[4])
p

ggsave("fig/audienceComposition.svg",width=gWidth,height=gHeight)


##install.packages(c('beanplot','vioplot','digest'))
require('beanplot')
require(vioplot)
require(devtools)
require(digest)
##source_gist("https://gist.github.com/mbjoseph/5852613")

plot(x=NULL, y=NULL,xlim = c(0.5, 2.5), ylim=c(min(melted$value), max(melted$value)),type="n", ann=FALSE, axes=F)
axis(1, at=c(1, 2),  labels=c("A", "B"))
axis(2)
for (i in unique(melted$Gender)) {
    for (j in unique(melted$variable)){
        vioplot(melted$value[which(melted$Gender == i & melted$variable  == j)],at = ifelse(i == "Female", 1, 2),side = ifelse(j == "Zwoman", "left", "right"),col = ifelse(j == "Zwoman" , "purple", "lightblue"),add = T)
    }
}
title("Violin plot", xlab="Treatment")
legend("bottomright", fill = c("purple", "lightblue"),legend = c("Group 1", "Group 2"), box.lty=0)


labelN <- unique(melted$variable)
plot(x=NULL, y=NULL,xlim = c(0.5, 2.5), ylim=c(min(melted$value), max(melted$value)),type="n", ann=FALSE, axes=F)
axis(1, at=1:length(labelN),  labels=labelN)
axis(2)
for (j in 1:length(labelN)){
    vioplot(melted$value[melted$variable %in% labelN[j]],at=j,side=2,add=TRUE)
}





