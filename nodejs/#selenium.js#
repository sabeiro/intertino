var webdriver = require('selenium-webdriver');
 
var driver = new webdriver.Builder().
   withCapabilities(webdriver.Capabilities.chrome()).
   build();
 
driver.get('http://www.google.com');
driver.findElement(webdriver.By.name('q')).sendKeys('simple programmer');
driver.findElement(webdriver.By.name('btnG')).click();
//driver.quit();



Hallo,

That's the offer KPMG bought we have to implement. I split everything into jobfiles and postprocessing.

Please comment using the structure we used in our meeting.

If you know any other information concerning the project (especially DS support) please update us.


querable: dominant_zone

returns: json


4days for day_type

day types: Mo-Sa, Di-Do, Sa
1.h

dominant_zone (MTC), day_type, hour, count

2.a-d

dominant_zone (MTC), home_zone (ZIP), day_type, count

2.b-d

home_zone (MTC), dominant_zone (ZIP), day_type, count

3.a-d

dominant_zone (MTC), age, day_type, count

3.b-d

dominant_zone (MTC), gender, day_type, count

2.a-h

dominant_zone (MTC), home_zone (ZIP), day_type, hour, count

2.b-h

home_zone (MTC), dominant_zone (ZIP), day_type, hour, count

3.a-h

dominant_zone (MTC), age, day_type, hour, count

3.b-h

dominant_zone (MTC), gender, day_type, hour, count

2.a-tz

dominant_zone (MTC), home_zone (ZIP), day_type, time_zone, count

2.b-tz

home_zone (MTC), dominant_zone (ZIP), day_type, hour, time_zone, count

3.a-tz

dominant_zone (MTC), age, day_type, hour, time_zone, count

3.b-tz

dominant_zone (MTC), gender, day_type, hour, time_zone, count


tables: 95E - daily values

- 1, 2.a-d, 3.a-d, 3.b-d

- 1, 2.b-d, 3.a-d, 3.b-d

- 2.a-d without counts


tables: 30E - custom aggregation time zones

- 1, 2.a-tz, 3.a-tz, 3.b-tz x4 time zones

- 1, 2.b-tz, 3.a-tz, 3.b-tz x4 time zones

- 2.a-tz without counts x4 time zones

tables: 60E - hourly values

- 1, 2.a-h, 3.a-h, 3.b-h x4 time zones

- 1, 2.b-h, 3.a-h, 3.b-h x4 time zones
- 2.a-h without counts x4 time zones


table: 20E MTC overall

- 1, 2.a-d, 3.a-d, 3.b-d

- 1, 2.b-d, 3.a-d, 3.b-d

- 2.a-d without counts

Workload:

DS: 0.5d preparing job files

QA: schedule + monitoring

process:

    tables 95E - 5 actRep x 7 daytypes ~ 140h
    tables 30E - 4 actRep x 7 daytypes ~ 112h
    tables 60E - 4 actRep x 7 daytypes ~ 112h
    tables 20E - 4 actRep x 7 daytypes ~ 112h

DS: 12d postprocessing after successful results of the job files for preparing the hardware, scripts, indexing, creating the tables

DEV: API setup....

DEV: billing calculator ...


112 actRep to process


