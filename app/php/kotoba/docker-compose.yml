version: '3.7'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    image: <ECR-Repo>:web
    command: gunicorn oddstracker_admin.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
    env_file:
      - .env.staging
    links:
        - db
    ports: 
        - "80:80"
    volumes: 
        - "./docker_web/www/:/var/www/site"
  db:
    image: mysql:latest
    restart: always
    volumes:
      - "./.data/db:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: ^^^^
      MYSQL_DATABASE: electionbattle
      MYSQL_USER: admin
      MYSQL_PASSWORD: ^^^^
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      - PMA_ARBITRARY=1
    restart: always
    ports:
      - 8081:80
    volumes:
      - /sessions
    links:
      - db
  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    image: <ECR-Repo>:nginx-proxy
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - .env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
    depends_on:
      - nginx-proxy

volumes:
  certs:
  html:
  vhost:
